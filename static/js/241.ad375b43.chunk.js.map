{"version":3,"file":"static/js/241.ad375b43.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.tsx","components/MovieInfo/MovieInfo.tsx","components/BackLink/BackLink.styled.tsx","components/BackLink/BackLink.tsx","pages/MovieDetails.tsx","services/api.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype BtnType = {\r\n  isFavorite?: boolean;\r\n};\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  gap: 60px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const Thumb = styled.div`\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  width: 400px;\r\n  height: 550px;\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 500px;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  color: black;\r\n  font-weight: 500;\r\n\r\n  &.active {\r\n    color: orangered;\r\n  }\r\n`;\r\n\r\nexport const Score = styled.span`\r\n  display: inline-block;\r\n  padding: 2px;\r\n  color: white;\r\n  background-color: orangered;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Button = styled.button<BtnType>`\r\n  width: 190px;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid;\r\n  border-color: ${props => (props.isFavorite ? 'orangered' : 'black')};\r\n  background-color: ${props => (props.isFavorite ? 'orangered' : 'white')};\r\n  color: ${props => (props.isFavorite ? 'white' : 'black')};\r\n  font-weight: 500;\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: orangered;\r\n    color: white;\r\n    border-color: orangered;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  Wrapper,\r\n  Thumb,\r\n  InfoWrapper,\r\n  Link,\r\n  Score,\r\n  Button,\r\n} from \"./MovieInfo.styled\";\r\n\r\ninterface IProps {\r\n  movie: {\r\n    poster_path: string;\r\n    original_title: string;\r\n    vote_average: number;\r\n    overview: string;\r\n    genres: { id: number; name: string }[];\r\n    release_date: string;\r\n    id: number;\r\n  };\r\n}\r\n\r\nconst MovieInfo: React.FC<IProps> = ({\r\n  movie: {\r\n    poster_path,\r\n    original_title,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n    release_date,\r\n    id,\r\n  },\r\n}) => {\r\n  const [favorites, setFavorites] = useState(\r\n    () => JSON.parse(localStorage.getItem(\"favorites\") as string) ?? []\r\n  );\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  useEffect(() => {\r\n    const isFavorite = favorites.find((movie: any) => movie.id === id);\r\n    if (isFavorite) {\r\n      setIsFavorite(true);\r\n    }\r\n  }, [favorites, id]);\r\n\r\n  const handleAddToFavorites = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setIsFavorite(true);\r\n    setFavorites((prev: any) => [\r\n      ...prev,\r\n      {\r\n        poster_path,\r\n        original_title,\r\n        vote_average,\r\n        overview,\r\n        genres,\r\n        release_date,\r\n        id,\r\n      },\r\n    ]);\r\n\r\n    if (isFavorite) {\r\n      setIsFavorite(false);\r\n      setFavorites((prev: any) => prev.filter((movie: any) => movie.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Thumb>\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n              : `https://via.placeholder.com/400x550.png?text=${original_title}`\r\n          }\r\n          alt={original_title}\r\n        />\r\n      </Thumb>\r\n      <InfoWrapper>\r\n        <h2>\r\n          {original_title} ({release_date.slice(0, 4)})\r\n        </h2>\r\n        <p>\r\n          User Score: <Score>{(vote_average * 10).toFixed()}%</Score>\r\n        </p>\r\n        <h3>Overview</h3>\r\n        <p>{overview}</p>\r\n        <h3>Genres</h3>\r\n        <p>{genres.map((gener) => `${gener.name}, `)}</p>\r\n        <h3>Additional information</h3>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"cast\">Cast</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"reviews\">Reviews</Link>\r\n          </li>\r\n        </ul>\r\n        <Button onClick={handleAddToFavorites} isFavorite={isFavorite}>\r\n          {isFavorite ? \"in favorites\" : \"add to favorites\"}\r\n        </Button>\r\n        <button>Video</button>\r\n      </InfoWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  padding: 8px 0;\r\n  margin-bottom: 30px;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  transition: color 0.3s ease-in-out;\r\n\r\n  :hover {\r\n    color: orangered;\r\n  }\r\n`;\r\n","import { HiArrowLeft } from 'react-icons/hi';\r\nimport { StyledLink } from './BackLink.styled';\r\n\r\ntype Props = {\r\n  to: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst BackLink = ({ to, children }: Props) => {\r\n  return (\r\n    <StyledLink to={to}>\r\n      <HiArrowLeft size=\"24\" />\r\n      {children}\r\n    </StyledLink>\r\n  );\r\n};\r\n\r\nexport default BackLink;\r\n","import { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\r\nimport { getMovieDetails } from '../services/api';\r\nimport MovieInfo from '../components/MovieInfo/MovieInfo';\r\nimport BackLink from '../components/BackLink/BackLink';\r\nimport toast from 'react-hot-toast';\r\nimport Loader from '../components/Loader/Loader';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams() as { movieId: string };\r\n  const [movie, setMovie] = useState(null);\r\n  const location = useLocation();\r\n  const ref = useRef(location.state?.from ?? '/');\r\n\r\n  useEffect(() => {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n    const fetchData = async () => {\r\n      try {\r\n        const movieDetails = await getMovieDetails(movieId, signal);\r\n        setMovie(movieDetails);\r\n      } catch (error: any) {\r\n        if (error.name === 'CanceledError') return;\r\n        toast.error('Oops, something went wrong');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n\r\n    return () => {\r\n      controller.abort();\r\n    };\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <main>\r\n      <BackLink to={ref.current}>Back</BackLink>\r\n      {movie && <MovieInfo movie={movie} />}\r\n      <Suspense\r\n        fallback={\r\n          <div>\r\n            <Loader />\r\n          </div>\r\n        }\r\n      >\r\n        <Outlet />\r\n      </Suspense>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\naxios.defaults.params = {\r\n  api_key: 'b60c32a6f6f2663f6a35c755ff35b4cc',\r\n};\r\n\r\nexport const getTrendingMovies = async (timePeriod: string, page: number, signal: AbortSignal) => {\r\n  const response = await axios.get(`/trending/movie/${timePeriod}?page=${page}`, {\r\n    signal,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieDetails = async (movieId: string, signal: AbortSignal) => {\r\n  const response = await axios.get(`/movie/${movieId}`, {\r\n    signal,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const searchMovie = async (query: string, page: number, signal: AbortSignal) => {\r\n  const response = await axios.get(`/search/movie?query=${query}&page=${page}`, {\r\n    signal,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieCredits = async (movieId: string, signal: AbortSignal) => {\r\n  const response = await axios.get(`/movie/${movieId}/credits`, {\r\n    signal,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieReviews = async (movieId: string, signal: AbortSignal) => {\r\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\r\n    signal,\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Thumb","_templateObject2","InfoWrapper","_templateObject3","Link","NavLink","_templateObject4","Score","_templateObject5","Button","_templateObject6","props","isFavorite","_ref","_ref$movie","movie","poster_path","original_title","vote_average","overview","genres","release_date","id","_useState","useState","_JSON$parse","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","favorites","setFavorites","_useState3","_useState4","setIsFavorite","useEffect","setItem","stringify","find","_jsxs","children","_jsx","src","concat","alt","slice","toFixed","map","gener","name","to","onClick","e","prev","_toConsumableArray","filter","StyledLink","HiArrowLeft","size","_location$state$from","_location$state","movieId","useParams","setMovie","location","useLocation","ref","useRef","state","from","controller","AbortController","signal","fetchData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieDetails","wrap","_context","next","getMovieDetails","sent","t0","abrupt","toast","stop","apply","arguments","abort","BackLink","current","MovieInfo","Suspense","fallback","Loader","Outlet","axios","api_key","getTrendingMovies","timePeriod","page","response","data","_x","_x2","_x3","_callee2","_context2","_x4","_x5","searchMovie","_ref3","_callee3","query","_context3","_x6","_x7","_x8","getMovieCredits","_ref4","_callee4","_context4","_x9","_x10","getMovieReviews","_ref5","_callee5","_context5","_x11","_x12"],"sourceRoot":""}